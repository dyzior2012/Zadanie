<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>